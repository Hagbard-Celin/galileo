#ifndef MISC_H
#define MISC_H


/****************************************************************************/


/* This file was created automatically by CatComp.
 * Do NOT edit by hand!
 */


#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif

#ifdef CATCOMP_ARRAY
#undef CATCOMP_NUMBERS
#undef CATCOMP_STRINGS
#define CATCOMP_NUMBERS
#define CATCOMP_STRINGS
#endif

#ifdef CATCOMP_BLOCK
#undef CATCOMP_STRINGS
#define CATCOMP_STRINGS
#endif


/****************************************************************************/


#ifdef CATCOMP_NUMBERS

#define MSG_BEEP_DESC 1
#define MSG_FLASH_DESC 2
#define MSG_ALARM_DESC 3

#endif /* CATCOMP_NUMBERS */


/****************************************************************************/


#ifdef CATCOMP_STRINGS

#define MSG_BEEP_DESC_STR "Makes a beep sound"
#define MSG_FLASH_DESC_STR "Flashes the display"
#define MSG_ALARM_DESC_STR "Sounds an alarm"

#endif /* CATCOMP_STRINGS */


/****************************************************************************/


#ifdef CATCOMP_ARRAY

struct CatCompArrayType
{
    LONG   cca_ID;
    STRPTR cca_Str;
};

static const struct CatCompArrayType CatCompArray[] =
{
    {MSG_BEEP_DESC,(STRPTR)MSG_BEEP_DESC_STR},
    {MSG_FLASH_DESC,(STRPTR)MSG_FLASH_DESC_STR},
    {MSG_ALARM_DESC,(STRPTR)MSG_ALARM_DESC_STR},
};

#endif /* CATCOMP_ARRAY */


/****************************************************************************/


#ifdef CATCOMP_BLOCK

static const char CatCompBlock[] =
{
    "\x00\x00\x00\x01\x00\x14"
    MSG_BEEP_DESC_STR "\x00\x00"
    "\x00\x00\x00\x02\x00\x14"
    MSG_FLASH_DESC_STR "\x00"
    "\x00\x00\x00\x03\x00\x10"
    MSG_ALARM_DESC_STR "\x00"
};

#endif /* CATCOMP_BLOCK */


/****************************************************************************/


struct LocaleInfo
{
    APTR li_LocaleBase;
    APTR li_Catalog;
};


#ifdef CATCOMP_CODE

struct CatCompBlockType
{
	LONG	ccb_ID;
	UWORD	ccb_StringSize;
};

STRPTR GetString(struct LocaleInfo * li, LONG stringNum)
{
	const struct CatCompBlockType * ccb = (APTR)CatCompBlock;
	const struct CatCompBlockType * ccb_stop = (APTR)&((BYTE *)ccb)[sizeof(CatCompBlock)];

	STRPTR builtin = NULL;
	STRPTR result = NULL;

	while(ccb < ccb_stop && ccb->ccb_StringSize > 0)
	{
		if(ccb->ccb_ID == stringNum)
		{
			builtin = (STRPTR)&ccb[1];
			break;
		}

		ccb = (struct CatCompBlockType *)&((BYTE *)ccb)[sizeof(*ccb) + ccb->ccb_StringSize];
	}

	if(li != NULL && li->li_LocaleBase != NULL)
	{
		struct Library * LocaleBase = li->li_LocaleBase;

		result = GetCatalogStr(li->li_Catalog, stringNum, builtin);
	}
	else
	{
		result = builtin;
	}

	return(result);
}


#endif /* CATCOMP_CODE */


/****************************************************************************/


#endif /* MISC_H */
